name: PR Slack Notification

on:
  pull_request:
    types: [opened]
  workflow_dispatch:

jobs:
  wait_for_ci:
    if: ${{ github.event.pull_request.draft == false }} # Skip draft PRs
    runs-on: ubuntu-latest
    steps:
      - name: Wait for 15 seconds. In case developer wants to make it draft
        run: sleep 15

      - name: Wait for the Latest CI Run of Current PR (Max 10 min)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          HEAD_SHA=${{ github.event.pull_request.head.sha }}
          CI_WORKFLOW_NAME="CI"
          REPO=${{ github.repository }}
          MAX_WAIT_TIME=600  # 10 minutes
          SLEEP_TIME=15       # Retry interval
          TIME_WAITED=0

          echo "üîÑ Waiting for the latest CI workflow of PR #$PR_NUMBER (SHA: $HEAD_SHA) to complete (Max: 10 min)..."

          while [[ $TIME_WAITED -lt $MAX_WAIT_TIME ]]; do
            LATEST_CI_RUN=$(gh run list --repo "$REPO" --json name,conclusion,event,headSha,updatedAt,status,number | jq -r '
              map(select(.name == "'"$CI_WORKFLOW_NAME"'" and .event == "pull_request" and .headSha == "'"$HEAD_SHA"'")) 
              | sort_by(.updatedAt) 
              | reverse 
              | .[0]')

            echo "LATEST_CI_RUN: $LATEST_CI_RUN"

            CI_STATUS=$(echo "$LATEST_CI_RUN" | jq -r '.conclusion')
            CI_RUNNING=$(echo "$LATEST_CI_RUN" | jq -r '.status')
            RUN_NUMBER=$(echo "$LATEST_CI_RUN" | jq -r '.run_number')

            if [[ "$RUN_NUMBER" == "null" ]]; then
              echo "‚ö†Ô∏è No active CI run found for this PR. Retrying in $SLEEP_TIME seconds..."
            elif [[ "$CI_RUNNING" == "completed" ]]; then
              if [[ "$CI_STATUS" == "success" ]]; then
                echo "‚úÖ Most recent CI run #$RUN_NUMBER for PR #$PR_NUMBER is successful! Sending Slack notification..."
                break
              else
                echo "‚ùå Most recent CI run #$RUN_NUMBER for PR #$PR_NUMBER failed. No notification will be sent."
                exit 1
              fi
            else
              echo "‚è≥ CI run #$RUN_NUMBER is still in progress... Retrying in $SLEEP_TIME seconds."
            fi

            sleep $SLEEP_TIME
            TIME_WAITED=$((TIME_WAITED + SLEEP_TIME))
          done

          if [[ $TIME_WAITED -ge $MAX_WAIT_TIME ]]; then
            echo "‚ö†Ô∏è CI did not finish within 10 minutes. Exiting..."
            exit 1
          fi

      - name: Send Slack Notification
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": ":git: @backend Please review <${{ github.event.pull_request.html_url }}|PR #${{ github.event.pull_request.number }}> by ${{ github.event.pull_request.user.login }}."
          }' $SLACK_WEBHOOK_URL
