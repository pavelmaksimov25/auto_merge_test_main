name: PR Slack Notification

on:
  pull_request:
  push:

jobs:
  wait_for_ci:
    runs-on: ubuntu-latest
    steps:
      - name: Wait for CI to Complete (Max 10 min)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          CI_WORKFLOW_NAME="CI"
          REPO=${{ github.repository }}
          MAX_WAIT_TIME=600  # 10 minutes in seconds
          SLEEP_TIME=15       # Retry interval in seconds
          TIME_WAITED=0

          echo "üîÑ Waiting for CI workflow to complete for PR #$PR_NUMBER (Max: 10 min)..."

          while [[ $TIME_WAITED -lt $MAX_WAIT_TIME ]]; do
            CI_STATUS=$(gh run list --repo "$REPO" --json name,conclusion,event,headSha | jq -r \
              ".[] | select(.name == \"$CI_WORKFLOW_NAME\" and .event == \"pull_request\" and .headSha == \"${{ github.event.pull_request.head_sha }}\") | .conclusion")

            if [[ "$CI_STATUS" == "success" ]]; then
              echo "‚úÖ CI passed! Sending Slack notification..."
              break
            elif [[ "$CI_STATUS" == "failure" ]]; then
              echo "‚ùå CI failed. No notification will be sent."
              exit 1
            elif [[ -z "$CI_STATUS" || "$CI_STATUS" == "null" ]]; then
              echo "‚è≥ CI is still running... Retrying in $SLEEP_TIME seconds."
            else
              echo "‚ö†Ô∏è Unexpected CI status: $CI_STATUS"
            fi

            sleep $SLEEP_TIME
            TIME_WAITED=$((TIME_WAITED + SLEEP_TIME))
          done

          if [[ $TIME_WAITED -ge $MAX_WAIT_TIME ]]; then
            echo "‚ö†Ô∏è CI did not finish within 10 minutes. Exiting..."
            exit 1
          fi

      - name: Send Slack Notification
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": ":git: @backend Please review [PR #${{ github.event.pull_request.number }}](${{ github.event.pull_request.html_url }}) by ${{ github.event.pull_request.user.login }}."
          }' $SLACK_WEBHOOK_URL
